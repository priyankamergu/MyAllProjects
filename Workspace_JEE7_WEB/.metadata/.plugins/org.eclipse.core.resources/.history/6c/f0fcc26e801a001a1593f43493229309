package com.interview.utility;

import java.util.List;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

public class SendAttachmentInEmail {
	/*
	 * public static void main(String[] args) { SendAttachmentInEmail email=new
	 * SendAttachmentInEmail(); email.sendMail(); }
	 */

	public boolean sendMail(String to,String date, String time, String note, String location) {
		boolean b = false;
		// Recipient's email ID needs to be mentioned.
//		String to = "priyankabhosale04@gmail.com";

		// Sender's email ID needs to be mentioned
		// String from = "javatestmail999@gmail.com";
		String from = "sendmailtostudentsdemo@gmail.com";

		final String username = "sendmailtostudentsdemo@gmail.com";// "javatestmail999@gmail.com";
		final String password = "Demo@12345";// "testmail123";

		// Assuming you are sending email through relay.jangosmtp.net
		// String host = "relay.jangosmtp.net";

		String host = "smtp.gmail.com";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.socketFactory.port", "465");
		props.put("mail.smtp.host", host);
		props.put("mail.smtp.port", "465");
		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");

		// Get the Session object.
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		});

		try {
			// Create a default MimeMessage object.
			Message message = new MimeMessage(session);

			// Set From: header field of the header.
			message.setFrom(new InternetAddress(from));

			// Set To: header field of the header.
			message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));

			// Set Subject: header field
			message.setSubject("Allianz - Job Offer");

			// Create the message part
			BodyPart messageBodyPart = new MimeBodyPart();

			// Now set the actual message
			messageBodyPart
					.setText("Dear Candidate,\n\nCongratulations!\n\nOn the basis of your Interview with our Company, "
							+ "\nWe are pleased to notify you, that you have been Selected to work with our Organization."
							+ "\nJoining Date : " + date + "\nTime " + time + "." + "\nLocation : " + location
							+ "\nNote : " + note
							+ "\nRequest you to carry all your Original Documents with Xerox copies of each for Document Verification purpose."
							+ "\n\nBest Regards,\nHR Manager,\nAllianz Technology SE\nKharadi.");

			// Create a multipart message
			Multipart multipart = new MimeMultipart();

			// Set text message part
			multipart.addBodyPart(messageBodyPart);

			// Part two is attachment
			messageBodyPart = new MimeBodyPart();

			String filename = ".\\WebContent\\allianz_logo3.jpg";
			// String filename = "./WebContent/allianz_logo1.png";

			DataSource source = new FileDataSource(filename);
			messageBodyPart.setDataHandler(new DataHandler(source));
			messageBodyPart.setFileName(filename);
			multipart.addBodyPart(messageBodyPart);

			// Send the complete message parts
			message.setContent(multipart);

			// Send message
			Transport.send(message);
			System.out.println("Email Sent Successfully....");
			b = true;
			return b;
		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}

	}

}
